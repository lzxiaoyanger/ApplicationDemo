<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zz.personal.dao.mapper.PhotoMapper" >
  <resultMap id="BaseResultMap" type="com.zz.personal.dao.entity.Photo" >
    <id column="photo_id" property="photoId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="photo_url" property="photoUrl" jdbcType="VARCHAR" />
    <result column="media_id" property="mediaId" jdbcType="VARCHAR" />
    <result column="summary" property="summary" jdbcType="VARCHAR" />
    <result column="likes" property="likes" jdbcType="INTEGER" />
    <result column="district" property="district" jdbcType="INTEGER" />
    <result column="is_delete" property="isDelete" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_date" property="createDate" jdbcType="DATE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    photo_id, user_id, user_name, photo_url, media_id, summary, likes, district, is_delete, 
    create_time, update_time, create_date
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zz.personal.dao.entity.PhotoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from photo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from photo
    where photo_id = #{photoId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from photo
    where photo_id = #{photoId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zz.personal.dao.entity.PhotoExample" >
    delete from photo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zz.personal.dao.entity.Photo" >
    <selectKey resultType="java.lang.Integer" keyProperty="photoId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into photo (user_id, user_name, photo_url, 
      media_id, summary, likes, 
      district, is_delete, create_time, 
      update_time, create_date)
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{photoUrl,jdbcType=VARCHAR}, 
      #{mediaId,jdbcType=VARCHAR}, #{summary,jdbcType=VARCHAR}, #{likes,jdbcType=INTEGER}, 
      #{district,jdbcType=INTEGER}, #{isDelete,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createDate,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.zz.personal.dao.entity.Photo" >
    <selectKey resultType="java.lang.Integer" keyProperty="photoId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into photo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="photoUrl != null" >
        photo_url,
      </if>
      <if test="mediaId != null" >
        media_id,
      </if>
      <if test="summary != null" >
        summary,
      </if>
      <if test="likes != null" >
        likes,
      </if>
      <if test="district != null" >
        district,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="photoUrl != null" >
        #{photoUrl,jdbcType=VARCHAR},
      </if>
      <if test="mediaId != null" >
        #{mediaId,jdbcType=VARCHAR},
      </if>
      <if test="summary != null" >
        #{summary,jdbcType=VARCHAR},
      </if>
      <if test="likes != null" >
        #{likes,jdbcType=INTEGER},
      </if>
      <if test="district != null" >
        #{district,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zz.personal.dao.entity.PhotoExample" resultType="java.lang.Integer" >
    select count(*) from photo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update photo
    <set >
      <if test="record.photoId != null" >
        photo_id = #{record.photoId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.photoUrl != null" >
        photo_url = #{record.photoUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.mediaId != null" >
        media_id = #{record.mediaId,jdbcType=VARCHAR},
      </if>
      <if test="record.summary != null" >
        summary = #{record.summary,jdbcType=VARCHAR},
      </if>
      <if test="record.likes != null" >
        likes = #{record.likes,jdbcType=INTEGER},
      </if>
      <if test="record.district != null" >
        district = #{record.district,jdbcType=INTEGER},
      </if>
      <if test="record.isDelete != null" >
        is_delete = #{record.isDelete,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update photo
    set photo_id = #{record.photoId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      photo_url = #{record.photoUrl,jdbcType=VARCHAR},
      media_id = #{record.mediaId,jdbcType=VARCHAR},
      summary = #{record.summary,jdbcType=VARCHAR},
      likes = #{record.likes,jdbcType=INTEGER},
      district = #{record.district,jdbcType=INTEGER},
      is_delete = #{record.isDelete,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_date = #{record.createDate,jdbcType=DATE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zz.personal.dao.entity.Photo" >
    update photo
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="photoUrl != null" >
        photo_url = #{photoUrl,jdbcType=VARCHAR},
      </if>
      <if test="mediaId != null" >
        media_id = #{mediaId,jdbcType=VARCHAR},
      </if>
      <if test="summary != null" >
        summary = #{summary,jdbcType=VARCHAR},
      </if>
      <if test="likes != null" >
        likes = #{likes,jdbcType=INTEGER},
      </if>
      <if test="district != null" >
        district = #{district,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=DATE},
      </if>
    </set>
    where photo_id = #{photoId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zz.personal.dao.entity.Photo" >
    update photo
    set user_id = #{userId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      photo_url = #{photoUrl,jdbcType=VARCHAR},
      media_id = #{mediaId,jdbcType=VARCHAR},
      summary = #{summary,jdbcType=VARCHAR},
      likes = #{likes,jdbcType=INTEGER},
      district = #{district,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_date = #{createDate,jdbcType=DATE}
    where photo_id = #{photoId,jdbcType=INTEGER}
  </update>
</mapper>